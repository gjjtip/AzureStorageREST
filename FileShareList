package serviceBusTest;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.TimeZone;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

import org.bouncycastle.util.encoders.Base64;

public class GetFileList {

	private static final String account = "jaygongeventhubstorage";
	private static final String key = "vXH30Q26Sxe199bfjqAp41GoBzg/brRQUwEacnp3NmR5R3PsBn36g95f2DGxppupE4gOrS4PbSgPUL694f174Q==";

	public static void main(String args[]) throws Exception{
//		System.setProperty("http.proxySet", "true");    //设置使用网络代理  
//		System.setProperty("http.proxyHost", "10.168.173.38");  //设置代理服务器地址  
//		System.setProperty("http.proxyPort", "8888");    //设置代理服务器端口号 
		
//		System.setProperty("socksProxySet", "true");
//		System.setProperty("socksProxyHost", "10.168.173.38");
//		System.setProperty("socksProxyPort", "8888");
		
		  System.setProperty("proxyType", "4");
          System.setProperty("proxyPort", "8888");
          System.setProperty("proxyHost", "10.168.173.38");
          System.setProperty("proxySet", "true");
		
		
//	    String urlString = "https://" + account + ".file.core.windows.net/newfile1/putblob.txt";
	    String urlString = "https://" + account + ".file.core.windows.net/?comp=list";
	    System.out.println(urlString);
	    HttpURLConnection connection = (HttpURLConnection)(new URL(urlString)).openConnection();
	    getFileRequest(connection, account, key);
	    connection.connect();
	    System.out.println("Response message : "+connection.getResponseMessage());
	    System.out.println("Response code : "+connection.getResponseCode());

	    BufferedReader br = null;
	    if(connection.getResponseCode() != 200){
	        br = new BufferedReader(new InputStreamReader((connection.getErrorStream())));
	    }else{
	         br = new BufferedReader(new InputStreamReader((connection.getInputStream())));
	    }
	    System.out.println("Response body : "+br.readLine());
	}

	public static void getFileRequest(HttpURLConnection request, String account, String key) throws Exception {
		SimpleDateFormat fmt = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss");
		fmt.setTimeZone(TimeZone.getTimeZone("GMT"));
		String date = fmt.format(Calendar.getInstance().getTime()) + " GMT";
		String stringToSign = "GET\n" 
		        + "\n" // content encoding
				+ "\n" // content language
				+ "\n" // content length
				+ "\n" // content md5
				+ "\n" // content type
				+ "\n" // date
				+ "\n" // if modified since
				+ "\n" // if match
				+ "\n" // if none match
				+ "\n" // if unmodified since
				+ "\n" // range
				+ "x-ms-date:" + date + "\nx-ms-version:2015-02-21\n" // headers
				+ "/" + account + request.getURL().getPath()+"\ncomp:list"; // resources
		
		System.out.println("stringToSign : " + stringToSign);
		String auth = getAuthenticationString(stringToSign);
		System.out.println(auth);
		request.setRequestMethod("GET");
		request.setRequestProperty("x-ms-date", date);
		request.setRequestProperty("x-ms-version", "2015-02-21");
		request.setRequestProperty("Authorization", auth);
	}

	private static String getAuthenticationString(String stringToSign) throws Exception {
		Mac mac = Mac.getInstance("HmacSHA256");
		mac.init(new SecretKeySpec(Base64.decode(key), "HmacSHA256"));
		String authKey = new String(Base64.encode(mac.doFinal(stringToSign.getBytes("UTF-8"))));
		String auth = "SharedKey " + account + ":" + authKey;
		return auth;
	}

}
